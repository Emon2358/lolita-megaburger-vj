# .github/workflows/full_video_workflow.yml
name: Full Video Processing & Upload Workflow

on:
  workflow_dispatch: # 手動実行を許可

env:
  # ★変更点: 完成した動画をプッシュするブランチを 'main' に設定
  TARGET_BRANCH: 'main' 
  
  # 最終的な動画のファイル名
  FINAL_VIDEO_NAME: 'final_datamoshed_video.mp4'

jobs:
  process_and_upload:
    runs-on: ubuntu-latest
    
    # リポジトリへの書き込み権限を付与
    permissions:
      contents: write 

    steps:
      # 1. 現在のブランチ（main）のコンテンツをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4
        # GITHUB_TOKEN を使用してチェックアウトすることで、後でプッシュできるようになります
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Python 3.x 環境をセットアップ
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3. 必要なライブラリとツールをインストール
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          pip install opencv-python numpy datamosh-py

      # 4. random_chroma.py を実行して動画を合成
      - name: Run random chromakey script
        run: python random_chroma.py

      # 5. データモッシュを適用
      - name: Apply datamosh
        run: |
          datamosh composited_video.mp4 -o ${{ env.FINAL_VIDEO_NAME }} --effect classic

      # 6. 完成した動画を main ブランチにコミット & プッシュ
      - name: Commit and push final video
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # ワークスペースを最新の状態に保つ
          git pull
          
          # 新しい動画ファイルを追加
          git add ${{ env.FINAL_VIDEO_NAME }}
          
          # 変更があればコミット、なければ何もしない
          git commit -m "Add/Update final datamoshed video (workflow run ${{ github.run_id }})" || echo "No changes to commit"
          
          # main ブランチにプッシュ
          git push

      # 7. (オプション) アーティファクトとしてもアップロード
      - name: Upload final video as artifact
        uses: actions/upload-artifact@v4
        with:
          name: final-datamoshed-video
          path: ${{ env.FINAL_VIDEO_NAME }}
